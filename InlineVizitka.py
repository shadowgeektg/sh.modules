"""

‚ñà‚ñÄ‚ÄÉ‚ñà‚ñë‚ñà‚ÄÉ‚ñÑ‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñÑ‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñë‚ñà‚ñë‚ñà
‚ñÑ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÄ‚ñà‚ÄÉ‚ñà‚ñÑ‚ñÄ‚ÄÉ‚ñà‚ñÑ‚ñà‚ÄÉ‚ñÄ‚ñÑ‚ñÄ‚ñÑ‚ñÄ

    Copyleft 2022 t.me/shadow_modules
    This module is free software
    You can edit this module
"""

from .. import loader, utils
from telethon.tl.types import Message
import logging
import asyncio

# scope: hikka_only
# meta developer: @shadow_hikka, @dan_endy, @hikariatama

logger = logging.getLogger(__name__)


@loader.tds
class InlineVizitkaMod(loader.Module):
    strings = {
        "name": "InlineVizitka",
        "mysocial": "<b>‚ú® My social networks</b>",
        "userules": "<b>How this module is used</b>\n1. Links to social networks must be entered in <code>{prefix}config</code>\n2. Links in the config must start with https:// otherwise there will be an <b>error</b>",
    }

    strings_ru = {
        "mysocial": "<b>‚ú® –ú–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏</b>",
        "userules": "<b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º –º–æ–¥—É–ª–µ–º</b>\n1. –°—Å—ã–ª–∫–∏ –Ω–∞ —Å–æ—Ü.—Å–µ—Ç–∏ –Ω–∞–¥–æ –≤–≤–æ–¥–∏—Ç—å –≤ <code>{prefix}config</code>\n2. –°—Å—ã–ª–∫–∏ –≤ –∫–æ–Ω—Ñ–∏–≥–µ –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å https:// –∏–Ω–∞—á–µ –±—É–¥–µ—Ç <b>–æ—à–∏–±–∫–∞</b>",
    }

    def __init__(self):
        self.config = loader.ModuleConfig(
            "custom_message",
            "<b>‚ú® –ú–æ–∏ —Å–æ—Ü—Å–µ—Ç–∏</b>",
            lambda: "Custom message in .vizitka",
            "VK",
            "üö´ Link not set",
            lambda: "You VK LINK",
            "discord",
            "üö´ Link not set",
            lambda: "You discord LINK",
            "twitter",
            "üö´ Link not set",
            lambda: "You twitter LINK",
            "inst",
            "üö´ Link not set",
            lambda: "You instagram LINK",
            "grustno",
            "üö´ Link not set",
            lambda: "You grustnogram LINK",
            "telegram",
            "üö´ Link not set",
            lambda: "You telegram chanel LINK",
            "gitlab",
            "üö´ Link not set",
            lambda: "You gitlab account LINK",
            "github",
            "üö´ Link not set",
            lambda: "You github account LINK",
            "twitch",
            "üö´ Link not set",
            lambda: "You twitch LINK",
            "anixart",
            "üö´ Link not set",
            lambda: "You anixart LINK",
            "xda",
            "üö´ Link not set",
            lambda: "You xda LINK",
            "4pda",
            "üö´ Link not set",
            lambda: "You 4pda LINK",
            "tiktok",
            "üö´ Link not set",
            lambda: "You tiktok LINK",
            "pinterest",
            "üö´ Link not set",
            lambda: "You pinterest LINK",
            "spotify",
            "üö´ Link not set",
            lambda: "You spotify LINK",
            "pixiv",
            "üö´ Link not set",
            lambda: "You pixiv LINK",
        )

    @loader.unrestricted
    async def vizitkacmd(self, message: Message) -> None:
        """Command for displaying a business card"""
        await self.inline.form(
            message=message,
            text=self.config["custom_message"],
            reply_markup=[
                [
                    {"text": "ü•± Discord", "callback": self.inline__callAnswer},
                    {"text": "ü¶¢ VK", "url": self.config["VK"]},
                ],
                [
                    {"text": "‚ù§ Instagram", "url": self.config["inst"]},
                    {"text": "üñ§ Grustnogram", "url": self.config["grustno"]},
                ],
                [
                    {"text": "üåê Twitter", "url": self.config["twitter"]},
                    {"text": "üí´ TG Channel", "url": self.config["telegram"]},
                ],
                [
                    {"text": "üåö GitHub", "url": self.config["github"]},
                    {"text": "‚òÄ GitLab", "url": self.config["gitlab"]},
                ],
                [
                    {"text": "üòΩ Anixart", "url": self.config["anixart"]},
                    {"text": "üì± 4PDA", "url": self.config["4pda"]},
                ],
                [
                    {"text": "üì∫ Twitch", "url": self.config["twitch"]},
                    {"text": "üì¥ XDA", "url": self.config["xda"]},
                ],
                [
                    {"text": "ü§£ Tik tok", "url": self.config["tiktok"]},
                    {"text": "üéß Spotify", "url": self.config["spotify"]},
                ],
                [
                    {"text": "üñå Pixiv", "url": self.config["pixiv"]},
                    {"text": "üñå Pinterest", "url": self.config["pinterest"]},
                ],
            ],
        )

    async def inline__callAnswer(self, call) -> None:
        await call.answer(self.config["discord"], show_alert=True)

    async def vizinfocmd(self, message: Message) -> None:
        await utils.answer(
            message, self.strings("userules").format(prefix=self.get_prefix())
        )
